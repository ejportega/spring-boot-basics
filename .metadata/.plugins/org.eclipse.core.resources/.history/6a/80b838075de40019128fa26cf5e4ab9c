package com.spring.rest.webservices.restfulwebservices.user;

import java.util.List;
import java.util.Optional;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class UserResource {

	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private UserDaoService service;
	
	@GetMapping(path = "/users")
	public List<User> retrieveAllUsers() {
		return userRepository.findAll();
	}
	
	@GetMapping(path = "/users/{id}")
	public Optional<User>	 getUser(@PathVariable int id) {
		Optional<User> user = userRepository.findById((long)id);
		
		if (user == null) {
			throw new UserNotFoundException("id-" + id);
		}		
		return user;
	} 
	
	@PostMapping(path = "/users")
	public ResponseEntity<Void> createUser(@Valid @RequestBody User user) {
		service.save(user);
		return new ResponseEntity<Void>(HttpStatus.CREATED);
	}
	
	@DeleteMapping(path = "/users/{id}")
	public ResponseEntity<Void> deleteUser(@PathVariable int id) {
		User user = service.deleteById(id);
		if (user == null) {
//			throw new UserNotFoundException("id-" + id);
			return new ResponseEntity<Void>(HttpStatus.NO_CONTENT); 
		}		
		return new ResponseEntity<Void>(HttpStatus.OK);
	}
}
